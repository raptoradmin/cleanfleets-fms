
************************************************************************************************************************************************************
FIND CONTROLS
************************************************************************************************************************************************************


   *******************************************************************************************************************
   Find Control Form View 
   *******************************************************************************************************************


   Dim IDEngine As HiddenField = CType(fv_EngineDetails.FindControl("hf_IDEngines"), HiddenField)








************************************************************************************************************************************************************
General Control Programming
************************************************************************************************************************************************************


   *******************************************************************************************************************
   Button Confirm Dialogue
   *******************************************************************************************************************

   onclientclick="return confirm('Select Ok to Delete or Cancel to keep.');"



   *******************************************************************************************************************
   DropDownList - Append DataboundItem
   *******************************************************************************************************************


   <asp:DropDownList ID="DropDownList1" AppendDataBoundItems="true" runat="server" DataSourceID="SqlDataSource1" DataTextField="state"       DataValueField="state">
    <asp:ListItem Text="(Select a State)" Value="" />    
   </asp:DropDownList>


   *******************************************************************************************************************
   Populate Textboxs and Lables using Query String
   *******************************************************************************************************************

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        hf_IDProfileAccount.Value = Request.QueryString("IDProfileAccount")

    End Sub


   *******************************************************************************************************************
   Drop Down List Append Items
   *******************************************************************************************************************



    Protected Sub Formview1_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles FormView1.PreRender

        If FormView1.CurrentMode = FormViewMode.Edit Then

            Dim rowView As DataRowView = CType(FormView1.DataItem, DataRowView)

            If Not IsNothing(rowView) AndAlso Not IsNothing(CType(FormView1.FindControl("DropDownListTitle"), DropDownList).Items.FindByValue(rowView("IDTitle").ToString())) Then
                CType(FormView1.FindControl("DropDownListTitle"), DropDownList).SelectedValue = rowView("IDTitle").ToString()

            End If

        End If

    End Sub



    Protected Sub Formview1_ItemUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.FormViewUpdateEventArgs) Handles FormView1.ItemUpdating

        e.NewValues("IDTitle") = CType(FormView1.FindControl("DropDownListTitle"), DropDownList).SelectedValue

    End Sub











************************************************************************************************************************************************************
General Control Formatting
************************************************************************************************************************************************************


   *******************************************************************************************************************
   Format Textboxs (Data field must be text if not read only.)
   *******************************************************************************************************************

      Currency

      <asp:TextBox ID="tbx_AcquiredCost" runat="server"  
      Text='<%# Bind("AcquiredCost", "{0:c}") %>' />


   *******************************************************************************************************************
   Format Label Content
   *******************************************************************************************************************

   Date

   <asp:Label ID="lbl_CleanedDate" runat="server"  
   Text='<%# Bind("CleanedDate","{0:d}") %>' />

   Curency

   <asp:Label ID="lbl_AcquiredCost" runat="server" 
   Text='<%# Bind("AcquiredCost","{0:c}") %>' />




   *******************************************************************************************************************
   Scrollable Label with Line Breaks
   *******************************************************************************************************************

   Create a DIV

   <div class="divlblScrollText">
   <asp:Label ID="lbl_Notes" runat="server"                                                                           
   Text='<%# Eval("Notes").ToString().Replace(Environment.NewLine,"<br />") %>' />
   </div>

   Add CSS

   .divlblScrollText
   {
   height: 60px;
   width: 600px;
   overflow: auto;
   padding: 5px;
   text-align: justify;
   }



   *******************************************************************************************************************
   Formated Date Picker
   *******************************************************************************************************************

   <telerik:RadDatePicker ID="rdp_CleanedDate" Runat="server" 
   Culture="English (United States)" DbSelectedDate='<%# Bind("CleanedDate") %>'>
   <Calendar Runat="server" UseColumnHeadersAsSelectors="False" UseRowHeadersAsSelectors="False" ViewSelectorText="x">
   </Calendar>
   <DatePopupButton HoverImageUrl="" ImageUrl="" />
   <DateInput Runat="server" DateFormat="M/d/yyyy" DisplayDateFormat="M/d/yyyy">
   </DateInput>
   </telerik:RadDatePicker>







************************************************************************************************************************************************************
TELERIK CONTROLS
************************************************************************************************************************************************************

   *******************************************************************************************************************
   Refresh Radgrid
   *******************************************************************************************************************

   Protected Sub rg_BudgetItems_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles rg_BudgetItems.PreRender
   rg_BudgetItems.MasterTableView.Rebind()
   End Sub


   *******************************************************************************************************************
   Use Auto Generate Delete Radgrid
   *******************************************************************************************************************

   Make sure to set MasterTableView -> DataKeyNames


   *******************************************************************************************************************
   Radgrid String Format
   *******************************************************************************************************************

   <telerik:GridTemplateColumn DataField="Phone1" HeaderText="Telephone" 
   SortExpression="Phone1" UniqueName="Phone1" >   
   <ItemTemplate >   
   <%# IIf(DataBinder.Eval(Container.DataItem, "Phone1") Is DBNull.Value, "N/A", String.Format("{0:(###) ###-####}", Double.Parse(Eval("Phone1"))))%>    
   </ItemTemplate>   
   </telerik:GridTemplateColumn> 

   *******************************************************************************************************************
   Grid Control - Create Row Number Column
   *******************************************************************************************************************

   <telerik:GridTemplateColumn DefaultInsertValue="" HeaderText="Row" 
   UniqueName="TemplateColumn">
   <itemtemplate>
   <%# Container.ItemIndex+1 %>
   </itemtemplate>
   </telerik:GridTemplateColumn>



   *******************************************************************************************************************
   RadGrid Panal Bar Expaned
   *******************************************************************************************************************


    Protected Sub RadPanelBar1_DataBound1(ByVal sender As Object, ByVal e As System.EventArgs) Handles RadPanelBar1.DataBound
        RadPanelBar1.Items(3).Expanded = True
    End Sub

   Item() = the count of Default items in Column 2



   *******************************************************************************************************************
   RadGrid Hide Cell
   *******************************************************************************************************************


    Protected Sub RadGrid1_ItemDataBound1(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGrid1.ItemDataBound


        If TypeOf e.Item Is GridDataItem Then
            Dim item As GridDataItem = TryCast(e.Item, GridDataItem)
            Dim value As String = item("IDServerRoomCheck").Text
            If value < "1" Then
                Dim hLink As HyperLink = DirectCast(item("IDServerRoomCheckLog").Controls(0), HyperLink)
                hLink.Visible = False
            End If
        End If


    End Sub



   *******************************************************************************************************************
   RadList Get DataKey Value
   *******************************************************************************************************************



    Protected Sub RadListView1_ItemCommand(ByVal sender As Object, ByVal e As RadListViewCommandEventArgs) Handles rlv_Organizations.ItemCommand
        If e.CommandName = RadListView.SelectCommandName Then
            Dim item As RadListViewDataItem = TryCast(e.ListViewItem, RadListViewDataItem)
            Dim IDProfileOrganization As String = item.GetDataKeyValue("IDProfileOrganization").ToString()
            Response.Redirect("organization_details.aspx?IDProfileOrganization=" & IDProfileOrganization)
        End If
    End Sub

	End Class



   *******************************************************************************************************************
   RadGrid  FindControl
   *******************************************************************************************************************


    Protected Sub rg_VehicleImages_ItemCreated(ByVal sender As Object, ByVal e As GridItemEventArgs) Handles rg_VehicleImages.ItemCreated

        If TypeOf e.Item Is GridDataItem Then
            Dim item As GridDataItem = DirectCast(e.Item, GridDataItem)
            Dim deleteBtn As LinkButton = DirectCast(item.FindControl("AutoGeneratedDeleteButton"), LinkButton)
            deleteBtn.Attributes.Add("onclick", "return confirm('Are you sure you want to delete this image?')")
        End If

    End Sub





   *******************************************************************************************************************
   RadGrid  Get DataKeyValue and any cell/column value - This is done using a GridTemplateColum with a Button in it.
   *******************************************************************************************************************



    Protected Sub btn_Add_Click(ByVal sender As Object, ByVal e As System.EventArgs)

        Dim item As GridDataItem = DirectCast(TryCast(sender, Button).NamingContainer, GridDataItem)
        Dim IDADUsers As String = item.OwnerTableView.DataKeyValues(item.ItemIndex)("IDADUsers")
        Dim selectedUserName As String = item("UserName").Text

        Roles.RemoveUserFromRole(selectedUserName, "SCSClient")
        Roles.AddUserToRole(selectedUserName, "SCSSiteAdmin")


        Dim conn As SqlConnection
        Dim cmd As SqlCommand
        Dim strconnection, strsqlinsert As String
        Dim IDSiteAdmins As String

        strconnection = (ConfigurationManager.ConnectionStrings("Human_ResourcesConnectionString").ConnectionString)
        strsqlinsert = "INSERT INTO SCS_SiteAdmins ( "
        strsqlinsert += "IDADUsers"
        strsqlinsert += ")"
        strsqlinsert += " VALUES ("
        strsqlinsert += "@IDADUsers"
        strsqlinsert += ")"
        strsqlinsert += "; SELECT SCOPE_IDENTITY() ; "
        conn = New SqlConnection(strconnection)
        cmd = New SqlCommand(strsqlinsert, conn)

        cmd.Parameters.Add("@IDADUsers", SqlDbType.VarChar, 50).Value = IDADUsers

        cmd.Connection.Open()
        IDSiteAdmins = cmd.ExecuteScalar

    End Sub




************************************************************************************************************************************************************
Data Access
************************************************************************************************************************************************************

   *******************************************************************************************************************
   Databound ComboBox
   *******************************************************************************************************************

To accomplish this using SQL, it is necessary to create a VIEW based on a Union Query

UNION QUERY

SELECT        Item
FROM            dbo.Asset_Inventory
UNION
SELECT        DisplayValue AS Item
FROM            dbo.Purchasing_Option_List
WHERE        dbo.Purchasing_Option_List.OptionName = 'PurchItem'


ASPX CODE

<asp:ComboBox ID="cbo_Item" runat="server" DataSourceID="sds_Item" 
DataTextField="Item" DataValueField="Item" MaxLength="0" 
AppendDataBoundItems="true">
</asp:ComboBox>


CODEBEHIND

    Protected Sub fv_Asset_Details_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles fv_Asset_Details.PreRender
        If fv_Asset_Details.CurrentMode = FormViewMode.Edit Then
            Dim rowView As DataRowView = CType(fv_Asset_Details.DataItem, DataRowView)
            If Not IsNothing(rowView) AndAlso Not IsNothing(CType(fv_Asset_Details.FindControl("cbo_Item"), AjaxControlToolkit.ComboBox).Items.FindByValue(rowView("Item").ToString())) Then
                CType(fv_Asset_Details.FindControl("cbo_Item"), AjaxControlToolkit.ComboBox).SelectedValue &= rowView("Item").ToString()
            End If
        End If
    End Sub

    Protected Sub fv_Asset_Details_ItemUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.FormViewUpdateEventArgs) Handles fv_Asset_Details.ItemUpdating
        e.NewValues("Item") = CType(fv_Asset_Details.FindControl("cbo_Item"), AjaxControlToolkit.ComboBox).SelectedValue
    End Sub



   *******************************************************************************************************************
   Populate Label from SQL Database
   *******************************************************************************************************************



    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim IDProfilefleet As String = Request.QueryString("IDProfilefleet")
        hf_IDProfileFleet.Value = Request.QueryString("IDProfileFleet")

        Dim cn As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("CF_SQL_Connection").ToString)
        cn.Open()
        Dim SqlCmd As SqlCommand
        SqlCmd = New SqlCommand("SELECT [FleetName] FROM [CF_Profile_Fleet] WHERE IDProfilefleet = " & IDProfilefleet & "", cn)

        lbl_FleetName.Text = CType(SqlCmd.ExecuteScalar, String)
        cn.Close()

    End Sub


   *******************************************************************************************************************
   Insert Data Into SQL Database
   *******************************************************************************************************************


        Dim conn As SqlConnection
        Dim cmd As SqlCommand
        Dim strconnection, strsqlinsert As String
        Dim IDSiteAdmins As String

        strconnection = (ConfigurationManager.ConnectionStrings("Human_ResourcesConnectionString").ConnectionString)
        strsqlinsert = "INSERT INTO SCS_SiteAdmins ( "
        strsqlinsert += "IDADUsers"
        strsqlinsert += ")"
        strsqlinsert += " VALUES ("
        strsqlinsert += "@IDADUsers"
        strsqlinsert += ")"
        strsqlinsert += "; SELECT SCOPE_IDENTITY() ; "
        conn = New SqlConnection(strconnection)
        cmd = New SqlCommand(strsqlinsert, conn)

        cmd.Parameters.Add("@IDADUsers", SqlDbType.VarChar, 50).Value = rcb_User.SelectedValue

        cmd.Connection.Open()
        IDSiteAdmins = cmd.ExecuteScalar
        cmd.Connection.Close()


   *******************************************************************************************************************
   Simple Insert Data Into SQL Database
   *******************************************************************************************************************

   Protected Sub btn_AddPurchaseAsset_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_AddPurchaseAsset.Click


        Dim IDPurchaseRequisition = Request.QueryString("IDPurchaseRequisition")

        Dim sql As String
        Dim strConnString As [String] = System.Configuration.ConfigurationManager.ConnectionStrings("Purchasing_PRS_ConnectionString").ConnectionString()
        sql = "INSERT INTO PRS_PurchaseRequisitionsApprovals (IDPurchaseRequisition, IDAuthorizer) Values (@IDPurchaseRequisition, @IDAuthorizer)"
        Dim connection As New SqlConnection(strConnString)
        Dim command As New SqlCommand(sql, connection)

        command.Parameters.Add("@IDPurchaseRequisition", SqlDbType.Int).Value = IDPurchaseRequisition
        command.Parameters.Add("@IDAuthorizer", SqlDbType.NVarChar, 36).Value = Session("IDAuthorizer")


        command.Connection.Open()
        command.ExecuteNonQuery()
        command.Connection.Close()

    End Sub







   ********************************************************************************************
   SQL - Simple Update Query
   ********************************************************************************************


        Dim IDTicket = Request.QueryString("IDTicket")
        Dim IDAssignedTech = Session("IDAssignedTech")

        Dim sql As String
        Dim strConnString As [String] = System.Configuration.ConfigurationManager.ConnectionStrings("IT_CentralConnectionString").ConnectionString()
        sql = "UPDATE ITC_Tickets SET IDAssignedTech = @IDAssignedTech WHERE IDTicket = @IDTicket"
        Dim cn As New SqlConnection(strConnString)
        Dim cmd As New SqlCommand(sql, cn)

        cmd.Parameters.Add("@IDAssignedTech", SqlDbType.VarChar, 50).Value = IDAssignedTech
        cmd.Parameters.Add("@IDTicket", SqlDbType.VarChar, 50).Value = IDTicket

        cmd.Connection.Open()
        cmd.ExecuteNonQuery()
        cmd.Connection.Close()





   ********************************************************************************************
   SQL - Simple Delete Query
   ********************************************************************************************    
    
        Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click

        Dim sql As String
        Dim strConnString As [String] = System.Configuration.ConfigurationManager.ConnectionStrings("CF_SQL_Connection").ConnectionString()
        sql = "DELETE FROM CF_Option_List " & "WHERE (IDOptionList = 442)"
        Dim connection As New SqlConnection(strConnString)
        Dim command As New SqlCommand(sql, connection)

        command.Connection.Open()
        command.ExecuteNonQuery()
        command.Connection.Close()

    End Sub
    


   *******************************************************************************************************************
      Select Data SQL Database - Fill Data Adapter
   *******************************************************************************************************************


    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click


        Dim connectionString As String = DirectCast(ConfigurationManager.ConnectionStrings("IT_CentralConnectionString").ConnectionString, String)
        Dim conn As New SqlConnection(connectionString)
        Dim comm As New SqlCommand("SELECT * FROM [01-OuImport]", conn)
        comm.Connection.Open()

        Dim myDataAdapter As New SqlDataAdapter(comm)
        Dim myDataSet As New DataSet
        Dim dtData As New DataTable
        Dim dtRow As DataRow
        myDataAdapter.Fill(myDataSet)
        conn.Close()

        For Each dtRow In myDataSet.Tables(0).Rows


            Dim UserName = dtRow.Item("UserName")
            Dim OU = dtRow.Item("OU")
            Dim OUSub = dtRow.Item("OUSub")
            Dim OUSubSub = dtRow.Item("OUSubSub")



        Next


    End Sub













   *******************************************************************************************************************
      Insert Data Into SQL Database - Insert Null Value
   *******************************************************************************************************************

   If tbx_AcquiredCost.Text = "" Then
            cmd.Parameters.AddWithValue("@AcquiredCost", Nothing)
        Else
            cmd.Parameters.AddWithValue("@AcquiredCost", Val(tbx_AcquiredCost.Text))
        End If


   *******************************************************************************************************************
   Insert Data Into SQL Database - Insert Null Date
   *******************************************************************************************************************

        If rdp_ShelfLifeExpireDate.SelectedDate Is Nothing Then
            cmd.Parameters.Add("@ShelfLifeExpireDate", SqlDbType.DateTime).Value = DBNull.Value
        Else
            cmd.Parameters.Add("@ShelfLifeExpireDate", SqlDbType.DateTime).Value = rdp_ShelfLifeExpireDate.SelectedDate
        End If




   *******************************************************************************************************************
   Hide Control based on SQL Select
   *******************************************************************************************************************


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim IDSubRequests As String = Request.QueryString("IDSubRequests")


        Dim cn As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("Human_ResourcesConnectionString").ToString)
        cn.Open()
        Dim SqlCmd As SqlCommand
        SqlCmd = New SqlCommand("SELECT [Status] FROM [vw_SCS_SubRequests] WHERE IDSubRequests = " & IDSubRequests & "", cn)

        Dim Status As String = SqlCmd.ExecuteScalar().ToString()

        If Status = "Approved" Then
            Button1.Visible = True
            Button1.Visible = False

        End If

        cn.Close()

    End Sub





   *******************************************************************************************************************
   SqlDataSource Parameters
   *******************************************************************************************************************


Control

    <asp:SqlDataSource ID="SDS_AD_User" runat="server" 
        ConnectionString="<%$ ConnectionStrings:Human_ResourcesConnectionString %>" 
        SelectCommand="SELECT [IDADUsers], [FullName], [UserName], [JobTitle] FROM [vw_SCS_SiteAdmins_Not] WHERE ([OU] = @OU) ORDER BY [FullName]">
        <SelectParameters>
            <asp:ControlParameter ControlID="RadComboBox1" Name="OU" 
                PropertyName="SelectedValue" Type="String" />
        </SelectParameters>
    </asp:SqlDataSource>


Session

    <asp:SqlDataSource ID="SDS_SiteAdmins" runat="server" 
        ConnectionString="<%$ ConnectionStrings:Human_ResourcesConnectionString %>" 
        SelectCommand="SELECT [IDADUsers], [FullName], [UserName], [JobTitle] FROM [vw_SCS_SiteAdmins] WHERE ([OU] = @OU) ORDER BY [FullName]">
        <SelectParameters>
            <asp:SessionParameter Name="OU" SessionField="OU" />
        </SelectParameters>
    </asp:SqlDataSource>




   *******************************************************************************************************************
   Remove All Spaces
   *******************************************************************************************************************


	update table
	set field = rtrim(ltrim(field)) 



*******************************************************************************************************************
   Copy Table
*******************************************************************************************************************

Structure Only  -     Select * Into <DestinationTableName> From <SourceTableName) Where 1 = 2 

Structure and Data -  Select * Into <DestinationTableName> From <SourceTableName)





************************************************************************************************************************************************************
Page Events
************************************************************************************************************************************************************




   *******************************************************************************************************************
   Retern to Previous Page
   *******************************************************************************************************************

   If Not Page.IsPostBack Then
            ' Save the referrer Url
            ViewState("ReferrerUrl") = Request.UrlReferrer.ToString()
        End If

    Protected Sub sds_Tasks_Deleted(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.SqlDataSourceStatusEventArgs) Handles sds_Tasks.Deleted

        Response.Redirect(ViewState("ReferrerUrl").ToString())

    End Sub










************************************************************************************************************************************************************
Session
************************************************************************************************************************************************************

  
   
   ********************************************************************************************
   Get field from SQL table based on session variables and write variable to session
   ********************************************************************************************
 
    Protected Sub Page_PreLoad(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreLoad
        Dim IDProfileAccount As String = "IDProfileAccount"
        Dim connectionString As String = DirectCast(ConfigurationManager.ConnectionStrings("CF_SQL_Connection").ConnectionString, String)
        Dim queryString As String = "SELECT IDProfileAccount, IDProfileContact FROM CF_Profile_Contact WHERE UserName = @UserName"

        Using myConnection As New SqlConnection(connectionString)
            Dim myCommand As New SqlCommand(queryString, myConnection)
            myConnection.Open()
            myCommand.Parameters.AddWithValue("@UserName", User.Identity.Name)
            Dim MyReader As SqlDataReader = myCommand.ExecuteReader
            MyReader.Read()
            lbl_User.Text = MyReader("IDProfileContact")
            Session("IDProfileAccount") = MyReader("IDProfileAccount")
            myConnection.Close()
        End Using
        lbl_Account.Text = Session("IDProfileAccount")
    End Sub
   


   ********************************************************************************************
   Get User Name and GUID from Session
   ********************************************************************************************
 
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim UserID As String
        Dim MemUser As MembershipUser
        Dim currentUser = Membership.GetUser()
        MemUser = Membership.GetUser()
        UserID = MemUser.ProviderUserKey.ToString()

        User.Text = currentUser.UserName
        message.Text = (UserID)
    End Sub





















************************************************************************************************************************************************************
Email Programming
************************************************************************************************************************************************************

   *******************************************************************************************************************
   Send HTML Email
   *******************************************************************************************************************

   Web.config

	<system.net>
		<mailSettings>
			<smtp>
			<network host="tusdexchsrv.tusd.local" defaultCredentials="false" password="ncc1701a" userName="abrowning"/>
			</smtp>
		</mailSettings>
	</system.net>



    Private Sub SendMail()
        Dim conc As String = ddl_IDTechnician.SelectedValue
        Dim s As String() = conc.Split("|")
        Dim ID As String = s(0)
        Dim Email As String = s(1)
        Dim SMTP As New SmtpClient
        Dim message As MailMessage = New MailMessage()
        Dim BodyText As String = tbx_Task.Text

        message.From = New MailAddress("itcentral@tustin.k12.ca.us")
        message.To.Add(Email)
        message.Subject = "New Task Assignment"
        BodyText = Replace(BodyText, vbCrLf, "<br>")



        message.Body = "<html>" & _
        "<head>" & _
        "<title>New Task Assignment</title>" & _
        "<style fprolloverstyle>A:hover {color: #800000}</style>" & _
        "<style href>a {text-decoration: none}</style>" & _
        "</head>" & _
        "<body style=""font-family: Arial; font-size: 10pt; text-align: justify"" link=""#597791"" vlink=""#597791"" alink=""#597791"">" & _
        "<br /><font color=""#597791"" size=""4"" face=""Arial,""><b>ITCentral Task Assignment Notice</b></font>" & _
        "<br />" & _
        "<br /><font color=""#597791"" size=""2"" face=""Arial,""><b>Deadline: </b></font>" & rdp_Deadline.SelectedDate & _
        "<br />" & _
        "<br /><font color=""#597791"" size=""2"" face=""Arial""><b>Subject: </b></font>" & tbx_Subject.Text & _
        "<br />" & _
        "<br /><font color=""#597791"" size=""2"" face=""Arial""><b>Task: </b></font>" & _
        "<br />" & _
        "<br />" & _
        BodyText & _
        "<br />" & _
        "<br />" & _
        "<br /><font color=""#597791"" size=""2"" face=""Arial,""><b><a href=""http://itcentral"">Log onto ITCentral to View Task Details</a></b></font>" & _
        "<br />" & _
        "<br />" & _
        "<br />" & _
        "</body>" & _
        "</html>"

        message.IsBodyHtml = True
        SMTP.Send(message)
        message.Dispose()
    End Sub















	*******************************************************************************************************************
	DropDownList - Eliminate SelectedValue which is invalid Issue
	*******************************************************************************************************************


   <asp:DropDownList ID="DropDownList1" runat="server" AppendDataBoundItems="True" 
   DataSourceID="sds_ContactType" DataTextField="DisplayValue" 
   DataValueField="IDOption">
   <asp:ListItem Text="Select" Value=" " />
   </asp:DropDownList>



    Protected Sub fmv_RolodexContact_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles fmv_RolodexContact.PreRender
        If fmv_RolodexContact.CurrentMode = FormViewMode.Edit Then
            Dim rowView As DataRowView = CType(fmv_RolodexContact.DataItem, DataRowView)
            If Not IsNothing(rowView) AndAlso Not IsNothing(CType(fmv_RolodexContact.FindControl("DropDownList1"), DropDownList).Items.FindByValue(rowView   	("ContactType").ToString())) Then
                CType(fmv_RolodexContact.FindControl("DropDownList1"), DropDownList).SelectedValue = rowView("ContactType").ToString()
            End If
        End If

    End Sub



    Protected Sub fmv_RolodexContactItemUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.FormViewUpdateEventArgs) Handles    	fmv_RolodexContact.ItemUpdating
        e.NewValues("IDContactType") = CType(fmv_RolodexContact.FindControl("DropDownList1"), DropDownList).SelectedValue
    End Sub









	*******************************************************************************************************************
	Previous Page Redirect
	*******************************************************************************************************************


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If (Not IsPostBack) Then
            prevPage = Request.UrlReferrer.ToString()
            Session("URLReferrer") = prevPage

        End If

    End Sub


    Protected Sub sds_Rolodex_Deleted(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.SqlDataSourceStatusEventArgs) Handles sds_Rolodex.Deleted
        prevPage = Session("URLReferrer")
        Response.Redirect(prevPage)
    End Sub













************************************************************************************************************************************************************
Application User Membership - AspNetSqlMembershipProvider
************************************************************************************************************************************************************




   ********************************************************************************************
   Get User Name and GUID from Session
   ********************************************************************************************




    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click


        Dim selectedUserName As String = CType(FormView1.FindControl("hfd_UserName"), HiddenField).Value
        Roles.RemoveUserFromRole(selectedUserName, "SCSClient")
        Roles.AddUserToRole(selectedUserName, "SCSSiteAdmin")



    End Sub



   *******************************************************************************************************************
   Delete Member
   *******************************************************************************************************************



    Protected Sub DeleteButton_Click(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim User As Label = CType(FormView1.FindControl("lbl_UserName"), Label)
        If User IsNot Nothing Then
            Dim AcctID As String = User.Text
            Membership.DeleteUser(User.Text)
        End If

    End Sub




   *******************************************************************************************************************
   Create Member
   *******************************************************************************************************************




   Protected Sub Button3_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button3.Click


        Dim UserName As String = UserNameTextBox.Text
        Dim Password As String = tbx_Password.Text
        Dim DisplayName As String = Display_NameTextBox.Text
        Dim newStringBuilder As New StringBuilder()
        newStringBuilder.Append(UserNameTextBox.Text)
        newStringBuilder.Append("@tustin.k12.ca.us")
        Dim Email As New String(newStringBuilder.ToString())

        Dim Rolename = "tusduser"

        Membership.CreateUser(UserName, Password, Email)
        Roles.AddUserToRole(UserName, Rolename)

        Response.Redirect("user_details_update.aspx?UserName=" & UserName)
    End Sub










   *******************************************************************************************************************
   Explicitley convert string to GUID
   *******************************************************************************************************************


	Dim ID As String = (hfd_UserId.Value)
        Dim UserID As System.Guid = CType(System.ComponentModel.TypeDescriptor.GetConverter(UserID).ConvertFrom(ID), System.Guid)







   *******************************************************************************************************************
   Back Buttons
   *******************************************************************************************************************



Method 1 – Using a static variable and UrlReferrer


Private Shared prevPage As String = String.Empty
 
Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If (Not IsPostBack) Then
            prevPage = Request.UrlReferrer.ToString()
        End If
End Sub
 
Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
        Response.Redirect(prevPage)
End Sub



 
Method 2 – Using Javascript


 
Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
Button2.Attributes.Add("onClick", "javascript:history.back(); return false;")
End Sub
 
Protected Sub Button2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button2.Click
 
End Sub
 



 
 
Method 3 – Using ViewState
 


 
Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If (Not IsPostBack) Then
            ViewState("RefUrl") = Request.UrlReferrer.ToString()
        End If
End Sub
 
 
Protected Sub Button3_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button3.Click
      Dim refUrl As Object = ViewState("RefUrl")
      If Not refUrl Is Nothing Then
          Response.Redirect(CStr(refUrl))
      End If
End Sub











************************************************************************************************************************************************************
SQL Code Snippets
************************************************************************************************************************************************************






   *******************************************************************************************************************
   Search ALL Tables for value
   *******************************************************************************************************************



Step 1 Create a stored procedure


CREATE PROC SearchAllTables
(
	@SearchStr nvarchar(100)
)
AS
BEGIN


	CREATE TABLE #Results (ColumnName nvarchar(370), ColumnValue nvarchar(3630))

	SET NOCOUNT ON

	DECLARE @TableName nvarchar(256), @ColumnName nvarchar(128), @SearchStr2 nvarchar(110)
	SET  @TableName = ''
	SET @SearchStr2 = QUOTENAME('%' + @SearchStr + '%','''')

	WHILE @TableName IS NOT NULL
	BEGIN
		SET @ColumnName = ''
		SET @TableName = 
		(
			SELECT MIN(QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME))
			FROM 	INFORMATION_SCHEMA.TABLES
			WHERE 		TABLE_TYPE = 'BASE TABLE'
				AND	QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME) > @TableName
				AND	OBJECTPROPERTY(
						OBJECT_ID(
							QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME)
							 ), 'IsMSShipped'
						       ) = 0
		)

		WHILE (@TableName IS NOT NULL) AND (@ColumnName IS NOT NULL)
		BEGIN
			SET @ColumnName =
			(
				SELECT MIN(QUOTENAME(COLUMN_NAME))
				FROM 	INFORMATION_SCHEMA.COLUMNS
				WHERE 		TABLE_SCHEMA	= PARSENAME(@TableName, 2)
					AND	TABLE_NAME	= PARSENAME(@TableName, 1)
					AND	DATA_TYPE IN ('char', 'varchar', 'nchar', 'nvarchar')
					AND	QUOTENAME(COLUMN_NAME) > @ColumnName
			)
	
			IF @ColumnName IS NOT NULL
			BEGIN
				INSERT INTO #Results
				EXEC
				(
					'SELECT ''' + @TableName + '.' + @ColumnName + ''', LEFT(' + @ColumnName + ', 3630) 
					FROM ' + @TableName + ' (NOLOCK) ' +
					' WHERE ' + @ColumnName + ' LIKE ' + @SearchStr2
				)
			END
		END	
	END

	SELECT ColumnName, ColumnValue FROM #Results
END


Step 2 Use stored procedure

EXEC SearchAllTables 'Computer'
GO 



   *******************************************************************************************************************
   List all tables and columns
   *******************************************************************************************************************


select table_name, column_name, ordinal_position, data_type
from information_schema.columns
order by 1,3





   *******************************************************************************************************************
   List Tables in Views
   *******************************************************************************************************************


SELECT view_name, Table_Name
FROM INFORMATION_SCHEMA.VIEW_TABLE_USAGE
ORDER BY view_name, table_name
GO




   *******************************************************************************************************************
   List Columns in Views
   *******************************************************************************************************************


SELECT * FROM sys.columns c, sys.views v
   WHERE c.object_id = v.object_id




   *******************************************************************************************************************
   List Database Roles with Permissions
   *******************************************************************************************************************

select sys.schemas.name 'Schema',
sys.objects.name Object,
sys.database_principals.name username,
sys.database_permissions.type permissions_type,
sys.database_permissions.permission_name,
sys.database_permissions.state permission_state,
sys.database_permissions.state_desc,
state_desc + ' ' + permission_name + ' on ['+ sys.schemas.name + '].[' + sys.objects.name + '] to [' + sys.database_principals.name + ']' COLLATE LATIN1_General_CI_AS
from sys.database_permissions join sys.objects on
sys.database_permissions.major_id = sys.objects.object_id join sys.schemas on
sys.objects.schema_id = sys.schemas.schema_id join sys.database_principals on
sys.database_permissions.grantee_principal_id = sys.database_principals.principal_id
order by 1, 2, 3, 5












